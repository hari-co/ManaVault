{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alec%20Jiang/Documents/mtgTracker/mtgtracker/components/cardsearch.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/cardsearch.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/cardsearch.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA6R,GAC1T,2DACA","debugId":null}},
    {"offset": {"line": 38, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alec%20Jiang/Documents/mtgTracker/mtgtracker/components/cardsearch.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/components/cardsearch.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/cardsearch.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAyQ,GACtS,uCACA","debugId":null}},
    {"offset": {"line": 52, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alec%20Jiang/Documents/mtgTracker/mtgtracker/src/config/firebase-config.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\r\nimport { initializeApp, getApps } from \"firebase/app\";\r\n// import { getAnalytics } from \"firebase/analytics\";\r\nimport {getAuth} from \"firebase/auth\";\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\r\n  authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\r\n  projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER,\r\n  appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\r\n  measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\r\n};\r\n\r\n\r\n// Initialize Firebase\r\nconst app = getApps().length ? getApps()[0] : initializeApp(firebaseConfig);\r\n// const analytics = getAnalytics(app);\r\nconst auth = getAuth(app);\r\n\r\nexport { app, auth };"],"names":[],"mappings":"AAAA,uDAAuD;;;;;AACvD;AAAA;AACA,qDAAqD;AACrD;AAAA;;;AACA,4DAA4D;AAC5D,iEAAiE;AAEjE,wCAAwC;AACxC,mEAAmE;AACnE,MAAM,iBAAiB;IACrB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACf;AAGA,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,IAAI,MAAM,GAAG,CAAA,GAAA,oLAAA,CAAA,UAAO,AAAD,GAAG,CAAC,EAAE,GAAG,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAC5D,uCAAuC;AACvC,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE","debugId":null}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/Alec%20Jiang/Documents/mtgTracker/mtgtracker/src/app/library/page.tsx"],"sourcesContent":["import CardSearch from '../../../components/cardsearch';\r\nimport { useEffect, useState } from 'react';\r\nimport { onAuthStateChanged, User } from 'firebase/auth';\r\nimport { auth } from '@/config/firebase-config';\r\nimport { useRouter } from 'next/navigation';\r\n\r\nexport default function Library() {\r\n    const [user, setUser] = useState<User | null>(null);\r\n    const router = useRouter();\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = onAuthStateChanged(auth, (user: User | null) => {\r\n            setUser(user);\r\n            if (!user) {\r\n                router.push('/account/login');\r\n            }\r\n        });\r\n    })\r\n\r\n    return (\r\n        <>\r\n            <div className='bg-green-600 flex flex-col'>\r\n                <h1 className=\"font-bold text-5xl py-6\">Library</h1>\r\n                <CardSearch />\r\n            </div>\r\n            <div className='flex flex-col bg-amber-500'>\r\n                <p>hello</p>\r\n            </div>\r\n        </>\r\n    );\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;;;;;;;AAEe,SAAS;IACpB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAC9C,MAAM,SAAS,CAAA,GAAA,qLAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACN,MAAM,cAAc,CAAA,GAAA,wNAAA,CAAA,qBAAkB,AAAD,EAAE,mIAAA,CAAA,OAAI,EAAE,CAAC;YAC1C,QAAQ;YACR,IAAI,CAAC,MAAM;gBACP,OAAO,IAAI,CAAC;YAChB;QACJ;IACJ;IAEA,qBACI;;0BACI,8OAAC;gBAAI,WAAU;;kCACX,8OAAC;wBAAG,WAAU;kCAA0B;;;;;;kCACxC,8OAAC,yHAAA,CAAA,UAAU;;;;;;;;;;;0BAEf,8OAAC;gBAAI,WAAU;0BACX,cAAA,8OAAC;8BAAE;;;;;;;;;;;;;AAInB","debugId":null}}]
}